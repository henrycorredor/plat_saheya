{
  "swagger": "2.0",
  "info": {
    "description": "Primera versión de la API para la plataforma tecnológica de SAHEYA. Próxima de lanzamiento.",
    "version": "1.0.0",
    "title": "SAHEYA GUANLI",
    "termsOfService": "none",
    "contact": {
      "email": "feijizoule@126.com"
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "user",
      "description": "Manejo de usuarios de la plataforma"
    },
    {
      "name": "loans",
      "description": "Administración de préstamos"
    },
    {
      "name": "payments",
      "description": "Administracion de los pagos hechos por los usuarios"
    },
    {
      "name": "admin",
      "description": "Acciones administrativas como aprobar prestamos, hacer cambios en las cuentas."
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "User list",
        "description": "User list. Only for admin staff",
        "operationId": "listUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User list",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create new user.",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user information",
        "description": "Gets all the information of given ID user. Able for the self user or admins.",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user info",
        "description": "User info can be changed by self or admins",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "new information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/{userId}/loan": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "summary": "get one users loans",
        "description": "List all loans under the actual user's name",
        "operationId": "getUserLoans",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's loans",
            "schema": {
              "$ref": "#/definitions/Loan"
            }
          }
        }
      }
    },
    "/user/{userIdDocumentNumber}/free_capital": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "userIdDocumentNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "summary": "Get free capital able from actual user",
        "description": "For privacy reasons, in this case user ID is not used but the actual user ID national document.",
        "operationId": "getUserFreeCapital",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Free user capital",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    },
    "/user/{userId}/payments": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "User list",
        "description": "User payments list. Only for admin and self use",
        "operationId": "getPayment",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User list",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        }
      }
    },
    "/loan": {
      "get": {
        "tags": [
          "loans"
        ],
        "summary": "Get all loans",
        "description": "Only admin staff can get the whole list of loans",
        "operationId": "getLoans",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Loans list",
            "schema": {
              "$ref": "#/definitions/Loan"
            }
          }
        }
      },
      "post": {
        "tags": [
          "loans"
        ],
        "summary": "Apply new loan",
        "description": "Logged users can use this method to set a new loan application",
        "operationId": "newLoan",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Loan setted",
            "schema": {
              "$ref": "#/definitions/Loan"
            }
          }
        }
      }
    },
    "/loan/{loanId}": {
      "get": {
        "tags": [
          "loans"
        ],
        "summary": "Get one loan data",
        "description": "Admin users can get all loans data, but regular users can get only their loans under their same user id.",
        "operationId": "getLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "ID of the loan to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Loan",
            "schema": {
              "$ref": "#/definitions/Loan"
            }
          }
        }
      },
      "put": {
        "tags": [
          "loans"
        ],
        "summary": "Cosigners and Admin aprove - reject - confirm loans.",
        "description": "Use this method to approve or reject co-signed loans. Users can only modify loans under the respective account, or with admin roles.",
        "operationId": "updateLoan",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "ID loan to be modified",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "description": "actions `2-reject` , `3-accept`, `5-treasurer-approve`,  `6-treasurer-confirm-disbursement`, `7-user-confirm-disbursement`, `8-loan-ended`, `10-freeze`",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateLoan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan modified."
          }
        }
      }
    },
    "/loan/{loanId}/cuote": {
      "get": {
        "tags": [
          "loans"
        ],
        "summary": "List cuotes of certain loan.",
        "description": "Get the whole list of the respective loan cuotes.",
        "operationId": "listCuotes",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Loan ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Cuote",
            "schema": {
              "$ref": "#/definitions/Cuote"
            }
          }
        }
      }
    },
    "/loan/{loanId}/cuote/{cuoteId}": {
      "get": {
        "tags": [
          "loans"
        ],
        "summary": "List one cuote.",
        "description": "Get all the info or a certain cuote.",
        "operationId": "listCuote",
        "parameters": [
          {
            "name": "loanId",
            "in": "path",
            "description": "Loan ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cuoteId",
            "in": "path",
            "description": "Cuote ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Cuote",
            "schema": {
              "$ref": "#/definitions/Cuote"
            }
          }
        }
      }
    },
    "/payment/": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List all payments",
        "description": "List all payments done to date.",
        "operationId": "getPayments",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Payments list",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Set a payment",
        "description": "Gets from Body all the data to set a new payment.",
        "operationId": "setPayment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "new information to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPayment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payment setted"
          }
        }
      }
    },
    "/payment/{paymentId}": {
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Confirm cuote payment",
        "description": "Accept or reject a payment.",
        "operationId": "updatePayment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment transaction ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tells how much was payed, and action to update the rest of the cuotes.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "number"
                },
                "action": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Payment updated."
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Loan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "fecha_inicial": {
          "type": "integer",
          "format": "int64"
        },
        "num_cuotas": {
          "type": "integer",
          "format": "int64"
        },
        "deudor_id": {
          "type": "integer",
          "format": "int64"
        },
        "estado": {
          "type": "integer",
          "format": "int64"
        },
        "monto": {
          "type": "integer",
          "format": "int64"
        },
        "fecha_registro": {
          "type": "integer",
          "format": "int64"
        },
        "pagado": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UpdateLoan": {
      "type": "object",
      "properties": {
        "rol": {
          "type": "integer",
          "format": "int64"
        },
        "new_status": {
          "type": "string"
        }
      }
    },
    "Cuote": {
      "type": "object",
      "properties": {
        "cuote_id": {
          "type": "integer",
          "format": "int64"
        },
        "loan_id": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "future_debt": {
          "type": "integer",
          "format": "int64"
        },
        "initial_date": {
          "type": "integer",
          "format": "int64"
        },
        "expiration_date": {
          "type": "integer",
          "format": "int64"
        },
        "interest": {
          "type": "integer",
          "format": "int64"
        },
        "fine": {
          "type": "integer",
          "format": "int64"
        },
        "payed": {
          "type": "integer",
          "format": "int64"
        },
        "actual_in_debt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UpdateCuote": {
      "type": "object",
      "properties": {
        "cuote_id": {
          "type": "integer",
          "format": "int64"
        },
        "amount_payed": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "type": "integer",
          "format": "int64"
        },
        "further_action": {
          "type": "string"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "transaccion_id": {
          "type": "integer",
          "format": "int64"
        },
        "usuario_id": {
          "type": "integer",
          "format": "int64"
        },
        "fecha_realizacion": {
          "type": "string"
        },
        "fecha_registro": {
          "type": "string"
        },
        "monto": {
          "type": "integer",
          "format": "int64"
        },
        "motivo": {
          "type": "string"
        },
        "comentario": {
          "type": "string"
        }
      }
    },
    "SetPayment": {
      "type": "object",
      "properties": {
        "user_from": {
          "type": "integer",
          "format": "int64"
        },
        "user_to": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "transactions": {
          "type": "object",
          "properties": {
            "aim": {
              "type": "string"
            },
            "amount": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    }
  }
}